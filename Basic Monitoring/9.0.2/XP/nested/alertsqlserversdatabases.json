{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "infrastructure": {
      "type": "secureObject",
      "defaultValue": {}
    },
    "deploymentId": {
      "type": "string"
    },
    "omsWorkspaceName": {
      "type": "string",
      "defaultValue": "[parameters('infrastructure').omsWorkspaceName]",
      "metadata": {
        "description": "OMS Workspace name."
      }
    },
    "omsWorkspaceLocation": {
      "type": "string",
      "defaultValue": "[parameters('infrastructure').omsWorkspaceLocation]",
      "metadata": {
        "description": "the Location in which your OMS will be provisioned"
      }
    },
    "omsWorkspaceAlertRecipients": {
      "type": "string",
      "metadata": {
        "Description": "List of recipients for the email alert separated by semicolon"
      }
    },
    "actionGroupName": {
      "type": "string",
      "defaultValue": "[parameters('infrastructure').actionGroupName]",
      "metadata": {
        "description": "The name of the action group to be associated with the alerts actions"
      }
    },
    "resourceTags": {
      "type": "object"
    }
  },
  "variables": {
    "actionGroupResourceId": "[resourceId('Microsoft.Insights/actionGroups',parameters('actionGroupName'))]",
    "workspaceApiVersion": "2017-04-26-preview",
    "alertResourcesApiVersion": "2018-04-16",
    "metricAlertResourcesApiVersion": "2018-03-01"
  },
  "resources": [
    {
      "name": "[concat('Database reporting high DTU_', parameters('deploymentId'),'-core-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high DTU_', parameters('deploymentId'),'-core-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-core-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high DTU_', parameters('deploymentId'),'-core-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high CPU usage_', parameters('deploymentId'),'-core-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high CPU usage_', parameters('deploymentId'),'-core-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-core-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high CPU usage_', parameters('deploymentId'),'-core-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting low storage space_', parameters('deploymentId'),'-core-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting low storage space_', parameters('deploymentId'),'-core-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-core-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting low storage space_', parameters('deploymentId'),'-core-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high Data IO Utilization_', parameters('deploymentId'),'-core-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high Data IO Utilization_', parameters('deploymentId'),'-core-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-core-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high Data IO Utilization_', parameters('deploymentId'),'-core-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high Resource Utilization_', parameters('deploymentId'),'-core-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high Resource Utilization_', parameters('deploymentId'),'-core-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-core-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high Resource Utilization_', parameters('deploymentId'),'-core-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high concurrent requests_', parameters('deploymentId'),'-core-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high concurrent requests_', parameters('deploymentId'),'-core-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-core-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high concurrent requests_', parameters('deploymentId'),'-core-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high DTU_', parameters('deploymentId'),'-exmmaster-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high DTU_', parameters('deploymentId'),'-exmmaster-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-exmmaster-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high DTU_', parameters('deploymentId'),'-exmmaster-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high CPU usage_', parameters('deploymentId'),'-exmmaster-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high CPU usage_', parameters('deploymentId'),'-exmmaster-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-exmmaster-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high CPU usage_', parameters('deploymentId'),'-exmmaster-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting low storage space_', parameters('deploymentId'),'-exmmaster-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting low storage space_', parameters('deploymentId'),'-exmmaster-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-exmmaster-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting low storage space_', parameters('deploymentId'),'-exmmaster-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high Data IO Utilization_', parameters('deploymentId'),'-exmmaster-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high Data IO Utilization_', parameters('deploymentId'),'-exmmaster-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-exmmaster-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high Data IO Utilization_', parameters('deploymentId'),'-exmmaster-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high Resource Utilization_', parameters('deploymentId'),'-exmmaster-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high Resource Utilization_', parameters('deploymentId'),'-exmmaster-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-exmmaster-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high Resource Utilization_', parameters('deploymentId'),'-exmmaster-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high concurrent requests_', parameters('deploymentId'),'-exmmaster-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high concurrent requests_', parameters('deploymentId'),'-exmmaster-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-exmmaster-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high concurrent requests_', parameters('deploymentId'),'-exmmaster-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high DTU_', parameters('deploymentId'),'-forms-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high DTU_', parameters('deploymentId'),'-forms-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-forms-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high DTU_', parameters('deploymentId'),'-forms-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high CPU usage_', parameters('deploymentId'),'-forms-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high CPU usage_', parameters('deploymentId'),'-forms-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-forms-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high CPU usage_', parameters('deploymentId'),'-forms-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting low storage space_', parameters('deploymentId'),'-forms-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting low storage space_', parameters('deploymentId'),'-forms-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-forms-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting low storage space_', parameters('deploymentId'),'-forms-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high Data IO Utilization_', parameters('deploymentId'),'-forms-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high Data IO Utilization_', parameters('deploymentId'),'-forms-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-forms-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high Data IO Utilization_', parameters('deploymentId'),'-forms-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high Resource Utilization_', parameters('deploymentId'),'-forms-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high Resource Utilization_', parameters('deploymentId'),'-forms-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-forms-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high Resource Utilization_', parameters('deploymentId'),'-forms-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high concurrent requests_', parameters('deploymentId'),'-forms-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high concurrent requests_', parameters('deploymentId'),'-forms-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-forms-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high concurrent requests_', parameters('deploymentId'),'-forms-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high DTU_', parameters('deploymentId'),'-ma-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high DTU_', parameters('deploymentId'),'-ma-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-ma-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high DTU_', parameters('deploymentId'),'-ma-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high CPU usage_', parameters('deploymentId'),'-ma-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high CPU usage_', parameters('deploymentId'),'-ma-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-ma-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high CPU usage_', parameters('deploymentId'),'-ma-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting low storage space_', parameters('deploymentId'),'-ma-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting low storage space_', parameters('deploymentId'),'-ma-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-ma-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting low storage space_', parameters('deploymentId'),'-ma-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high Data IO Utilization_', parameters('deploymentId'),'-ma-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high Data IO Utilization_', parameters('deploymentId'),'-ma-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-ma-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high Data IO Utilization_', parameters('deploymentId'),'-ma-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high Resource Utilization_', parameters('deploymentId'),'-ma-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high Resource Utilization_', parameters('deploymentId'),'-ma-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-ma-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high Resource Utilization_', parameters('deploymentId'),'-ma-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high concurrent requests_', parameters('deploymentId'),'-ma-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high concurrent requests_', parameters('deploymentId'),'-ma-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-ma-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high concurrent requests_', parameters('deploymentId'),'-ma-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high DTU_', parameters('deploymentId'),'-master-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high DTU_', parameters('deploymentId'),'-master-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-master-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high DTU_', parameters('deploymentId'),'-master-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high CPU usage_', parameters('deploymentId'),'-master-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high CPU usage_', parameters('deploymentId'),'-master-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-master-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high CPU usage_', parameters('deploymentId'),'-master-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting low storage space_', parameters('deploymentId'),'-master-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting low storage space_', parameters('deploymentId'),'-master-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-master-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting low storage space_', parameters('deploymentId'),'-master-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high Data IO Utilization_', parameters('deploymentId'),'-master-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high Data IO Utilization_', parameters('deploymentId'),'-master-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-master-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high Data IO Utilization_', parameters('deploymentId'),'-master-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high Resource Utilization_', parameters('deploymentId'),'-master-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high Resource Utilization_', parameters('deploymentId'),'-master-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-master-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high Resource Utilization_', parameters('deploymentId'),'-master-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high concurrent requests_', parameters('deploymentId'),'-master-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high concurrent requests_', parameters('deploymentId'),'-master-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-master-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high concurrent requests_', parameters('deploymentId'),'-master-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high DTU_', parameters('deploymentId'),'-messaging-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high DTU_', parameters('deploymentId'),'-messaging-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-messaging-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high DTU_', parameters('deploymentId'),'-messaging-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high CPU usage_', parameters('deploymentId'),'-messaging-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high CPU usage_', parameters('deploymentId'),'-messaging-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-messaging-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high CPU usage_', parameters('deploymentId'),'-messaging-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting low storage space_', parameters('deploymentId'),'-messaging-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting low storage space_', parameters('deploymentId'),'-messaging-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-messaging-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting low storage space_', parameters('deploymentId'),'-messaging-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high Data IO Utilization_', parameters('deploymentId'),'-messaging-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high Data IO Utilization_', parameters('deploymentId'),'-messaging-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-messaging-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high Data IO Utilization_', parameters('deploymentId'),'-messaging-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high Resource Utilization_', parameters('deploymentId'),'-messaging-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high Resource Utilization_', parameters('deploymentId'),'-messaging-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-messaging-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high Resource Utilization_', parameters('deploymentId'),'-messaging-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high concurrent requests_', parameters('deploymentId'),'-messaging-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high concurrent requests_', parameters('deploymentId'),'-messaging-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-messaging-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high concurrent requests_', parameters('deploymentId'),'-messaging-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high DTU_', parameters('deploymentId'),'-pools-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high DTU_', parameters('deploymentId'),'-pools-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-pools-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high DTU_', parameters('deploymentId'),'-pools-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high CPU usage_', parameters('deploymentId'),'-pools-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high CPU usage_', parameters('deploymentId'),'-pools-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-pools-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high CPU usage_', parameters('deploymentId'),'-pools-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting low storage space_', parameters('deploymentId'),'-pools-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting low storage space_', parameters('deploymentId'),'-pools-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-pools-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting low storage space_', parameters('deploymentId'),'-pools-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high Data IO Utilization_', parameters('deploymentId'),'-pools-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high Data IO Utilization_', parameters('deploymentId'),'-pools-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-pools-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high Data IO Utilization_', parameters('deploymentId'),'-pools-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high Resource Utilization_', parameters('deploymentId'),'-pools-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high Resource Utilization_', parameters('deploymentId'),'-pools-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-pools-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high Resource Utilization_', parameters('deploymentId'),'-pools-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high concurrent requests_', parameters('deploymentId'),'-pools-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high concurrent requests_', parameters('deploymentId'),'-pools-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-pools-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high concurrent requests_', parameters('deploymentId'),'-pools-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high DTU_', parameters('deploymentId'),'-refdata-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high DTU_', parameters('deploymentId'),'-refdata-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-refdata-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high DTU_', parameters('deploymentId'),'-refdata-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high CPU usage_', parameters('deploymentId'),'-refdata-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high CPU usage_', parameters('deploymentId'),'-refdata-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-refdata-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high CPU usage_', parameters('deploymentId'),'-refdata-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting low storage space_', parameters('deploymentId'),'-refdata-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting low storage space_', parameters('deploymentId'),'-refdata-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-refdata-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting low storage space_', parameters('deploymentId'),'-refdata-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high Data IO Utilization_', parameters('deploymentId'),'-refdata-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high Data IO Utilization_', parameters('deploymentId'),'-refdata-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-refdata-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high Data IO Utilization_', parameters('deploymentId'),'-refdata-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high Resource Utilization_', parameters('deploymentId'),'-refdata-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high Resource Utilization_', parameters('deploymentId'),'-refdata-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-refdata-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high Resource Utilization_', parameters('deploymentId'),'-refdata-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high concurrent requests_', parameters('deploymentId'),'-refdata-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high concurrent requests_', parameters('deploymentId'),'-refdata-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-refdata-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high concurrent requests_', parameters('deploymentId'),'-refdata-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high DTU_', parameters('deploymentId'),'-reporting-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high DTU_', parameters('deploymentId'),'-reporting-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-reporting-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high DTU_', parameters('deploymentId'),'-reporting-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high CPU usage_', parameters('deploymentId'),'-reporting-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high CPU usage_', parameters('deploymentId'),'-reporting-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-reporting-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high CPU usage_', parameters('deploymentId'),'-reporting-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting low storage space_', parameters('deploymentId'),'-reporting-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting low storage space_', parameters('deploymentId'),'-reporting-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-reporting-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting low storage space_', parameters('deploymentId'),'-reporting-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high Data IO Utilization_', parameters('deploymentId'),'-reporting-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high Data IO Utilization_', parameters('deploymentId'),'-reporting-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-reporting-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high Data IO Utilization_', parameters('deploymentId'),'-reporting-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high Resource Utilization_', parameters('deploymentId'),'-reporting-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high Resource Utilization_', parameters('deploymentId'),'-reporting-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-reporting-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high Resource Utilization_', parameters('deploymentId'),'-reporting-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high concurrent requests_', parameters('deploymentId'),'-reporting-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high concurrent requests_', parameters('deploymentId'),'-reporting-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-reporting-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high concurrent requests_', parameters('deploymentId'),'-reporting-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high DTU_', parameters('deploymentId'),'-shard0-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high DTU_', parameters('deploymentId'),'-shard0-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard0-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high DTU_', parameters('deploymentId'),'-shard0-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high CPU usage_', parameters('deploymentId'),'-shard0-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high CPU usage_', parameters('deploymentId'),'-shard0-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard0-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high CPU usage_', parameters('deploymentId'),'-shard0-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting low storage space_', parameters('deploymentId'),'-shard0-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting low storage space_', parameters('deploymentId'),'-shard0-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard0-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting low storage space_', parameters('deploymentId'),'-shard0-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high Data IO Utilization_', parameters('deploymentId'),'-shard0-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high Data IO Utilization_', parameters('deploymentId'),'-shard0-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard0-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high Data IO Utilization_', parameters('deploymentId'),'-shard0-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high Resource Utilization_', parameters('deploymentId'),'-shard0-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high Resource Utilization_', parameters('deploymentId'),'-shard0-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard0-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high Resource Utilization_', parameters('deploymentId'),'-shard0-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high concurrent requests_', parameters('deploymentId'),'-shard0-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high concurrent requests_', parameters('deploymentId'),'-shard0-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard0-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high concurrent requests_', parameters('deploymentId'),'-shard0-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high DTU_', parameters('deploymentId'),'-shard1-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high DTU_', parameters('deploymentId'),'-shard1-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard1-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high DTU_', parameters('deploymentId'),'-shard1-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high CPU usage_', parameters('deploymentId'),'-shard1-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high CPU usage_', parameters('deploymentId'),'-shard1-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard1-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high CPU usage_', parameters('deploymentId'),'-shard1-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting low storage space_', parameters('deploymentId'),'-shard1-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting low storage space_', parameters('deploymentId'),'-shard1-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard1-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting low storage space_', parameters('deploymentId'),'-shard1-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high Data IO Utilization_', parameters('deploymentId'),'-shard1-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high Data IO Utilization_', parameters('deploymentId'),'-shard1-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard1-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high Data IO Utilization_', parameters('deploymentId'),'-shard1-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high Resource Utilization_', parameters('deploymentId'),'-shard1-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high Resource Utilization_', parameters('deploymentId'),'-shard1-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard1-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high Resource Utilization_', parameters('deploymentId'),'-shard1-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high concurrent requests_', parameters('deploymentId'),'-shard1-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high concurrent requests_', parameters('deploymentId'),'-shard1-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard1-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high concurrent requests_', parameters('deploymentId'),'-shard1-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high DTU_', parameters('deploymentId'),'-smm-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high DTU_', parameters('deploymentId'),'-smm-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-smm-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high DTU_', parameters('deploymentId'),'-smm-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high CPU usage_', parameters('deploymentId'),'-smm-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high CPU usage_', parameters('deploymentId'),'-smm-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-smm-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high CPU usage_', parameters('deploymentId'),'-smm-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting low storage space_', parameters('deploymentId'),'-smm-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting low storage space_', parameters('deploymentId'),'-smm-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-smm-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting low storage space_', parameters('deploymentId'),'-smm-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high Data IO Utilization_', parameters('deploymentId'),'-smm-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high Data IO Utilization_', parameters('deploymentId'),'-smm-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-smm-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high Data IO Utilization_', parameters('deploymentId'),'-smm-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high Resource Utilization_', parameters('deploymentId'),'-smm-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high Resource Utilization_', parameters('deploymentId'),'-smm-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-smm-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high Resource Utilization_', parameters('deploymentId'),'-smm-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high concurrent requests_', parameters('deploymentId'),'-smm-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high concurrent requests_', parameters('deploymentId'),'-smm-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-smm-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high concurrent requests_', parameters('deploymentId'),'-smm-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high DTU_', parameters('deploymentId'),'-tasks-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high DTU_', parameters('deploymentId'),'-tasks-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-tasks-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high DTU_', parameters('deploymentId'),'-tasks-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high CPU usage_', parameters('deploymentId'),'-tasks-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high CPU usage_', parameters('deploymentId'),'-tasks-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-tasks-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high CPU usage_', parameters('deploymentId'),'-tasks-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting low storage space_', parameters('deploymentId'),'-tasks-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting low storage space_', parameters('deploymentId'),'-tasks-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-tasks-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting low storage space_', parameters('deploymentId'),'-tasks-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high Data IO Utilization_', parameters('deploymentId'),'-tasks-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high Data IO Utilization_', parameters('deploymentId'),'-tasks-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-tasks-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high Data IO Utilization_', parameters('deploymentId'),'-tasks-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high Resource Utilization_', parameters('deploymentId'),'-tasks-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high Resource Utilization_', parameters('deploymentId'),'-tasks-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-tasks-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high Resource Utilization_', parameters('deploymentId'),'-tasks-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high concurrent requests_', parameters('deploymentId'),'-tasks-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high concurrent requests_', parameters('deploymentId'),'-tasks-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-tasks-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high concurrent requests_', parameters('deploymentId'),'-tasks-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high DTU_', parameters('deploymentId'),'-web-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high DTU_', parameters('deploymentId'),'-web-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-web-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high DTU_', parameters('deploymentId'),'-web-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high CPU usage_', parameters('deploymentId'),'-web-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high CPU usage_', parameters('deploymentId'),'-web-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-web-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high CPU usage_', parameters('deploymentId'),'-web-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting low storage space_', parameters('deploymentId'),'-web-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting low storage space_', parameters('deploymentId'),'-web-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-web-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting low storage space_', parameters('deploymentId'),'-web-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high Data IO Utilization_', parameters('deploymentId'),'-web-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high Data IO Utilization_', parameters('deploymentId'),'-web-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-web-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high Data IO Utilization_', parameters('deploymentId'),'-web-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high Resource Utilization_', parameters('deploymentId'),'-web-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high Resource Utilization_', parameters('deploymentId'),'-web-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-web-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high Resource Utilization_', parameters('deploymentId'),'-web-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat('Database reporting high concurrent requests_', parameters('deploymentId'),'-web-db')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "description": "[concat('Check Database reporting high concurrent requests_', parameters('deploymentId'),'-web-db')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-web-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 60 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check Database reporting high concurrent requests_', parameters('deploymentId'),'-web-db')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    }
  ]
}