{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0-r220+220.1862ac675e9e45e83a045f452b155c07b0a2a6d1",
  "variables": {
    "webApiVersion": "2015-08-01",
    "dbApiVersion": "2014-04-01-preview",
    "searchApiVersion": "2015-02-28",
    "redisApiVersion": "2016-04-01",
    "appInsightsApiVersion": "2014-08-01",
    "cmHostingPlanNameTidy": "[toLower(trim(parameters('cm.hostingplan.name')))]",
    "cdHostingPlanNameTidy": "[toLower(trim(parameters('cd.hostingplan.name')))]",
    "cmWebAppNameTidy": "[toLower(trim(parameters('cm.webapp.name')))]",
    "cdWebAppNameTidy": "[toLower(trim(parameters('cd.webapp.name')))]",
    "dbServerNameTidy": "[toLower(trim(parameters('sqlserver.name')))]",
    "coreDbNameTidy": "[toLower(trim(parameters('core.sqldatabase.name')))]",
    "webDbNameTidy": "[toLower(trim(parameters('web.sqldatabase.name')))]",
    "webDbServerNameTidy": "[toLower(trim(parameters('web.sqlserver.name')))]",
    "masterDbNameTidy": "[toLower(trim(parameters('master.sqldatabase.name')))]",
    "searchServiceNameTidy": "[toLower(trim(parameters('searchservice.name')))]",
    "redisCacheNameTidy": "[toLower(trim(parameters('rediscache.name')))]",
    "appInsightsNameTidy": "[toLower(trim(parameters('applicationinsights.name')))]",
    "licenseXml": "[parameters('licenseXml')]"
  },
  "parameters": {
    "deploymentId": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]"
    },
    "slotName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "cm.hostingplan.name": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-cm-hp')]"
    },
    "cd.hostingplan.name": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-cd-hp')]"
    },
    "cm.webapp.name": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-cm')]"
    },
    "cd.webapp.name": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-cd')]"
    },
    "cm.msdeploy.packageurl": {
      "type": "securestring"
    },
    "cd.msdeploy.packageurl": {
      "type": "securestring"
    },
    "sqlserver.name": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), parameters('slotName'), '-sql')]"
    },
    "sqlserver.login": {
      "type": "string",
      "minLength": 1
    },
    "sqlserver.password": {
      "type": "securestring",
      "minLength": 8
    },
    "web.sqlserver.name": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), parameters('slotName'), '-web-sql')]"
    },
    "web.sqlserver.login": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[parameters('sqlserver.login')]"
    },
    "web.sqlserver.password": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[parameters('sqlserver.password')]"
    },
    "core.sqldatabase.name": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), parameters('slotName'), '-core-db')]"
    },
    "master.sqldatabase.name": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), parameters('slotName'), '-master-db')]"
    },
    "web.sqldatabase.name": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), parameters('slotName'), '-web-db')]"
    },
    "cm.core.sqldatabase.username": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat('cm-core-', deployment().name, '-user')]"
    },
    "cm.core.sqldatabase.password": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('cm-core')), '@', uniqueString(parameters('sqlserver.password')))]"
    },
    "cm.master.sqldatabase.username": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat('cm-master-', deployment().name, '-user')]"
    },
    "cm.master.sqldatabase.password": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('cm-master')), '@', uniqueString(parameters('sqlserver.password')))]"
    },
    "cm.web.sqldatabase.username": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat('cm-web-', deployment().name, '-user')]"
    },
    "cm.web.sqldatabase.password": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('cm-web')), '@', uniqueString(parameters('sqlserver.password')))]"
    },
    "cd.core.sqldatabase.username": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat('cd-core-', deployment().name, '-user')]"
    },
    "cd.core.sqldatabase.password": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('cd-core')), '@', uniqueString(parameters('sqlserver.password')))]"
    },
    "cd.web.sqldatabase.username": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat('cd-web-', deployment().name, '-user')]"
    },
    "cd.web.sqldatabase.password": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('cd-web')), '@', uniqueString(parameters('sqlserver.password')))]"
    },
    "searchservice.name": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), parameters('slotName'), '-as')]"
    },
    "rediscache.name": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), parameters('slotName'), '-redis')]"
    },
    "applicationinsights.name": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), parameters('slotName'), '-ai')]"
    },
    "applicationinsights.location": {
      "type": "string",
      "defaultValue": "East US",
      "allowedValues": [ "East US", "South Central US", "North Europe", "West Europe" ]
    },
    "searchservice.skuname": {
      "type": "string",
      "defaultValue": "Standard"
    },
    "sqlserver.version": {
      "type": "string",
      "defaultValue": "12.0"
    },
    "sqldatabase.collation": {
      "type": "string",
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
    },
    "sqldatabase.edition": {
      "type": "string",
      "defaultValue": "Standard"
    },
    "sqldatabase.maxsize": {
      "type": "string",
      "defaultValue": "10737418240"
    },
    "sqldatabase.serviceobjectivelevel": {
      "type": "string",
      "defaultValue": "S1"
    },
    "searchservice.cdlicacount": {
      "type": "int",
      "defaultValue": 1
    },
    "searchservice.partitioncount": {
      "type": "int",
      "defaultValue": 1
    },
    "rediscache.skuname": {
      "type": "string",
      "defaultValue": "Basic"
    },
    "rediscache.skufamily": {
      "type": "string",
      "defaultValue": "C"
    },
    "rediscache.skucapacity": {
      "type": "string",
      "defaultValue": "0"
    },
    "sitecoreTags": {
      "type": "object",
      "defaultValue": {
        "provider": "b51535c2-ab3e-4a68-95f8-e2e3c9a19299"
      }
    },
    "licenseXml": {
      "type": "securestring"
    },
    "security.clientIp": {
      "type": "string",
      "defaultValue": "0.0.0.0"
    },
    "security.clientIpMask": {
      "type": "string",
      "defaultValue": "0.0.0.0"
    },
    "sitecore.admin.password": {
      "type": "securestring",
      "minLength": 8,
      "maxLength": 128
    }
  },
  "resources": [
    {
      "type": "Microsoft.Web/sites/slots",
      "name": "[concat(variables('cmHostingPlanNameTidy'), '/', parameters('slotName'))]",
      "apiVersion": "[variables('webApiVersion')]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('cmHostingPlanNameTidy'))]",
        "siteConfig": {
          "use32BitWorkerProcess": false,
          "alwaysOn": true,
          "phpVersion": "",
          "defaultDocuments": [
            "index.html"
          ]
        }
      },
      "location": "[parameters('location')]",
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]",
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('cmHostingPlanNameTidy'))]": "Resource"
      },
      "resources": [
        
      ]
    },
    {
      "type": "Microsoft.Web/sites/slots",
      "name": "[concat(variables('cdHostingPlanNameTidy'), '/', parameters('slotName'))]",
      "apiVersion": "[variables('webApiVersion')]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('cdHostingPlanNameTidy'))]",
        "siteConfig": {
          "use32BitWorkerProcess": false,
          "alwaysOn": true,
          "phpVersion": "",
          "defaultDocuments": [
            "index.html"
          ]
        }
      },
      "location": "[parameters('location')]",
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]",
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('cdHostingPlanNameTidy'))]": "Resource"
      },
      "resources": [
        
      ]
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "[variables('dbApiVersion')]",
      "properties": {
        "administratorLogin": "[parameters('sqlserver.login')]",
        "administratorLoginPassword": "[parameters('sqlserver.password')]",
        "version": "[parameters('sqlserver.version')]"
      },
      "name": "[variables('dbServerNameTidy')]",
      "location": "[parameters('location')]",
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]"
      },
      "resources": [
        {
          "type": "firewallrules",
          "apiVersion": "[variables('dbApiVersion')]",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          },
          "name": "AllowAllWindowsAzureIps",
          "dependsOn": [ "[resourceId('Microsoft.Sql/servers', variables('dbServerNameTidy'))]" ]
        },
        {
          "type": "databases",
          "apiVersion": "[variables('dbApiVersion')]",
          "properties": {
            "edition": "[parameters('sqldatabase.edition')]",
            "collation": "[parameters('sqldatabase.collation')]",
            "maxSizeBytes": "[parameters('sqldatabase.maxsize')]",
            "requestedServiceObjectiveName": "[parameters('sqldatabase.serviceobjectivelevel')]"
          },
          "name": "[variables('coreDbNameTidy')]",
          "location": "[parameters('location')]",
          "dependsOn": [ "[resourceId('Microsoft.Sql/servers', variables('dbServerNameTidy'))]" ],
          "tags": {
            "provider": "[parameters('sitecoreTags').provider]"
          }
        },
        {
          "type": "databases",
          "apiVersion": "[variables('dbApiVersion')]",
          "properties": {
            "edition": "[parameters('sqldatabase.edition')]",
            "collation": "[parameters('sqldatabase.collation')]",
            "maxSizeBytes": "[parameters('sqldatabase.maxsize')]",
            "requestedServiceObjectiveName": "[parameters('sqldatabase.serviceobjectivelevel')]"
          },
          "name": "[variables('masterDbNameTidy')]",
          "location": "[parameters('location')]",
          "dependsOn": [ "[resourceId('Microsoft.Sql/servers', variables('dbServerNameTidy'))]" ],
          "tags": {
            "provider": "[parameters('sitecoreTags').provider]"
          }
        }
      ]
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "[variables('dbApiVersion')]",
      "properties": {
        "administratorLogin": "[parameters('web.sqlserver.login')]",
        "administratorLoginPassword": "[parameters('web.sqlserver.password')]",
        "version": "[parameters('sqlserver.version')]"
      },
      "name": "[variables('webDbServerNameTidy')]",
      "location": "[parameters('location')]",
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]"
      },
      "resources": [
        {
          "type": "firewallrules",
          "apiVersion": "[variables('dbApiVersion')]",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          },
          "name": "AllowAllWindowsAzureIps",
          "dependsOn": [ "[resourceId('Microsoft.Sql/servers', variables('webDbServerNameTidy'))]" ]
        },
        {
          "type": "databases",
          "apiVersion": "[variables('dbApiVersion')]",
          "properties": {
            "edition": "[parameters('sqldatabase.edition')]",
            "collation": "[parameters('sqldatabase.collation')]",
            "maxSizeBytes": "[parameters('sqldatabase.maxsize')]",
            "requestedServiceObjectiveName": "[parameters('sqldatabase.serviceobjectivelevel')]"
          },
          "name": "[variables('webDbNameTidy')]",
          "location": "[parameters('location')]",
          "dependsOn": [ "[resourceId('Microsoft.Sql/servers', variables('webDbServerNameTidy'))]" ],
          "tags": {
            "provider": "[parameters('sitecoreTags').provider]"
          }
        }
      ]
    },
    {
      "type": "Microsoft.Search/searchServices",
      "apiVersion": "[variables('searchApiVersion')]",
      "name": "[variables('searchServiceNameTidy')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "[toLower(parameters('searchservice.skuname'))]"
        },
        "cdlicaCount": "[parameters('searchservice.cdlicacount')]",
        "partitionCount": "[parameters('searchservice.partitioncount')]"
      },
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]"
      }
    },
    {
      "type": "Microsoft.Cache/Redis",
      "name": "[variables('redisCacheNameTidy')]",
      "apiVersion": "[variables('redisApiVersion')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "[parameters('rediscache.skuname')]",
          "family": "[parameters('rediscache.skufamily')]",
          "capacity": "[parameters('rediscache.skucapacity')]"
        },
        "enableNonSslPort": false
      },
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]"
      }
    },
    {
      "type": "Microsoft.Insights/Components",
      "name": "[variables('appInsightsNameTidy')]",
      "apiVersion": "[variables('appInsightsApiVersion')]",
      "location": "[parameters('applicationinsights.location')]",
      "properties": {
        "ApplicationId": "[variables('appInsightsNameTidy')]",
        "Application_Type": "web"
      },
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]"
      }
    }
  ]
}
