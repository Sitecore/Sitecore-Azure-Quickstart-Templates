{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0-r220+220.1862ac675e9e45e83a045f452b155c07b0a2a6d1",
  "variables": {
    "webApiVersion": "2015-08-01",
    "dbApiVersion": "2014-04-01-preview",
    "searchApiVersion": "2015-02-28",
    "redisApiVersion": "2016-04-01",
    "appInsightsApiVersion": "2014-08-01",
    "cmHostingPlanNameTidy": "[toLower(trim(parameters('cmHostingplanName')))]",
    "cdHostingPlanNameTidy": "[toLower(trim(parameters('cdHostingplanName')))]",
    "prcHostingPlanNameTidy": "[toLower(trim(parameters('prcHostingplanName')))]",
    "repHostingPlanNameTidy": "[toLower(trim(parameters('repHostingplanName')))]",
    "cmWebAppNameTidy": "[toLower(trim(parameters('cmWebappName')))]",
    "cdWebAppNameTidy": "[toLower(trim(parameters('cdWebappName')))]",
    "prcWebAppNameTidy": "[toLower(trim(parameters('prc.webapp.name')))]",
    "repWebAppNameTidy": "[toLower(trim(parameters('repWebappName')))]",
    "dbServerNameTidy": "[toLower(trim(parameters('sqlserverName')))]",
    "webDbServerNameTidy": "[toLower(trim(parameters('webSqlserverName')))]",
    "coreDbNameTidy": "[toLower(trim(parameters('coreSqldatabaseName')))]",
    "webDbNameTidy": "[toLower(trim(parameters('webSqldatabaseName')))]",
    "masterDbNameTidy": "[toLower(trim(parameters('masterSqldatabaseName')))]",
    "repDbNameTidy": "[toLower(trim(parameters('reportingSqldatabaseName')))]",
    "analyticsMongoDbConnStrTidy": "[trim(parameters('analyticsMongodbConnectionstring'))]",
    "trackingLiveMongoDbConnStrTidy": "[trim(parameters('trackingLiveMongodbConnectionstring'))]",
    "trackingHistoryMongoDbConnStrTidy": "[trim(parameters('trackingHistoryMongodbConnectionstring'))]",
    "trackingContactMongoDbConnStrTidy": "[trim(parameters('trackingContactMongodbConnectionstring'))]",
    "searchServiceNameTidy": "[toLower(trim(parameters('searchserviceName')))]",
    "redisCacheNameTidy": "[toLower(trim(parameters('rediscacheName')))]",
    "appInsightsNameTidy": "[toLower(trim(parameters('applicationinsightsName')))]",
    "licenseXml": "[parameters('licenseXml')]"
  },
  "parameters": {
    "deploymentId": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "cmHostingplanName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-cm-hp')]"
    },
    "cdHostingplanName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-cd-hp')]"
    },
    "prcHostingplanName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-prc-hp')]"
    },
    "repHostingplanName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-rep-hp')]"
    },
    "cmWebappName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-cm')]"
    },
    "cdWebappName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-cd')]"
    },
    "prc.webapp.name": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-prc')]"
    },
    "repWebappName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-rep')]"
    },
    "cmMsdeployPackageurl": {
      "type": "securestring"
    },
    "cdMsdeployPackageurl": {
      "type": "securestring"
    },
    "prcMsdeployPackageurl": {
      "type": "securestring"
    },
    "repMsdeployPackageurl": {
      "type": "securestring"
    },
    "sqlserverName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-sql')]"
    },
    "sqlserverLogin": {
      "type": "string",
      "minLength": 1
    },
    "sqlserverPassword": {
      "type": "securestring",
      "minLength": 8
    },
    "webSqlserverName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-web-sql')]"
    },
    "webSqlserverLogin": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[parameters('sqlserverLogin')]"
    },
    "webSqlserverPassword": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[parameters('sqlserverPassword')]"
    },
    "coreSqldatabaseName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-core-db')]"
    },
    "masterSqldatabaseName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-master-db')]"
    },
    "webSqldatabaseName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-web-db')]"
    },
    "reportingSqldatabaseName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-reporting-db')]"
    },
    "cmCoreSqldatabaseUsername": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat('cm-core-', deployment().name, '-user')]"
    },
    "cmCoreSqldatabasePassword": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('cm-core')), '@', uniqueString(parameters('sqlserverPassword')))]"
    },
    "cmMasterSqldatabaseUsername": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat('cm-master-', deployment().name, '-user')]"
    },
    "cmMasterSqldatabasePassword": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('cm-master')), '@', uniqueString(parameters('sqlserverPassword')))]"
    },
    "cmWebSqldatabaseUsername": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat('cm-web-', deployment().name, '-user')]"
    },
    "cmWebSqldatabasePassword": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('cm-web')), '@', uniqueString(parameters('sqlserverPassword')))]"
    },
    "cdCoreSqldatabaseUsername": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat('cd-core-', deployment().name, '-user')]"
    },
    "cdCoreSqldatabasePassword": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('cd-core')), '@', uniqueString(parameters('sqlserverPassword')))]"
    },
    "cdWebSqldatabaseUsername": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat('cd-web-', deployment().name, '-user')]"
    },
    "cdWebSqldatabasePassword": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('cd-web')), '@', uniqueString(parameters('sqlserverPassword')))]"
    },
    "prcCoreSqldatabaseUsername": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat('prc-core-', deployment().name, '-user')]"
    },
    "prcCoreSqldatabasePassword": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('prc-core')), '@', uniqueString(parameters('sqlserverPassword')))]"
    },
    "prcMasterSqldatabaseUsername": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat('prc-master-', deployment().name, '-user')]"
    },
    "prcMasterSqldatabasePassword": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('prc-master')), '@', uniqueString(parameters('sqlserverPassword')))]"
    },
    "prcWebSqldatabaseUsername": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat('prc-web-', deployment().name, '-user')]"
    },
    "prcWebSqldatabasePassword": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('prc-web')), '@', uniqueString(parameters('sqlserverPassword')))]"
    },
    "prcReportingSqldatabaseUsername": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat('prc-reporting-', deployment().name, '-user')]"
    },
    "prcReportingSqldatabasePassword": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('prc-reporting')), '@', uniqueString(parameters('sqlserverPassword')))]"
    },
    "repCoreSqldatabaseUsername": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat('rep-core-', deployment().name, '-user')]"
    },
    "repCoreSqldatabasePassword": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('rep-core')), '@', uniqueString(parameters('sqlserverPassword')))]"
    },
    "repMasterSqldatabaseUsername": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat('rep-master-', deployment().name, '-user')]"
    },
    "repMasterSqldatabasePassword": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('rep-master')), '@', uniqueString(parameters('sqlserverPassword')))]"
    },
    "repWebSqldatabaseUsername": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat('rep-web-', deployment().name, '-user')]"
    },
    "repWebSqldatabasePassword": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('rep-web')), '@', uniqueString(parameters('sqlserverPassword')))]"
    },
    "repReportingSqldatabaseUsername": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat('rep-reporting-', deployment().name, '-user')]"
    },
    "repReportingSqldatabasePassword": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('rep-reporting')), '@', uniqueString(parameters('sqlserverPassword')))]"
    },
    "analyticsMongodbConnectionstring": {
      "type": "securestring"
    },
    "trackingLiveMongodbConnectionstring": {
      "type": "securestring"
    },
    "trackingHistoryMongodbConnectionstring": {
      "type": "securestring"
    },
    "trackingContactMongodbConnectionstring": {
      "type": "securestring"
    },
    "searchserviceName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-as')]"
    },
    "rediscacheName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-redis')]"
    },
    "applicationinsightsName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-ai')]"
    },
    "applicationinsightsLocation": {
      "type": "string",
      "defaultValue": "East US",
      "allowedValues": [ "East US", "South Central US", "North Europe", "West Europe" ]
    },
    "cmHostingplanSkuname": {
      "type": "string",
      "defaultValue": "S1"
    },
    "cmHostingplanSkucapacity": {
      "type": "int",
      "defaultValue": 1
    },
    "cdHostingplanSkuname": {
      "type": "string",
      "defaultValue": "S1"
    },
    "cdHostingplanSkucapacity": {
      "type": "int",
      "defaultValue": 1
    },
    "prcHostingplanSkuname": {
      "type": "string",
      "defaultValue": "S1"
    },
    "prcHostingplanSkucapacity": {
      "type": "int",
      "defaultValue": 1
    },
    "repHostingplanSkuname": {
      "type": "string",
      "defaultValue": "S1"
    },
    "repHostingplanSkucapacity": {
      "type": "int",
      "defaultValue": 1
    },
    "searchserviceSkuname": {
      "type": "string",
      "defaultValue": "Standard"
    },
    "sqlserverVersion": {
      "type": "string",
      "defaultValue": "12.0"
    },
    "sqldatabaseCollation": {
      "type": "string",
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
    },
    "sqldatabaseEdition": {
      "type": "string",
      "defaultValue": "Standard"
    },
    "sqldatabaseMaxsize": {
      "type": "string",
      "defaultValue": "10737418240"
    },
    "sqldatabaseServiceobjectivelevel": {
      "type": "string",
      "defaultValue": "S1"
    },
    "searchserviceReplicacount": {
      "type": "int",
      "defaultValue": 1
    },
    "searchservicePartitioncount": {
      "type": "int",
      "defaultValue": 1
    },
    "rediscacheSkuname": {
      "type": "string",
      "defaultValue": "Basic"
    },
    "rediscacheSkufamily": {
      "type": "string",
      "defaultValue": "C"
    },
    "rediscacheSkucapacity": {
      "type": "string",
      "defaultValue": "0"
    },
    "sitecoreTags": {
      "type": "object",
      "defaultValue": {
        "provider": "b51535c2-ab3e-4a68-95f8-e2e3c9a19299"
      }
    },
    "licenseXml": {
      "type": "securestring"
    },
    "securityClientIp": {
      "type": "string",
      "defaultValue": "0.0.0.0"
    },
    "securityClientIpMask": {
      "type": "string",
      "defaultValue": "0.0.0.0"
    },
    "sitecoreAdminPassword": {
      "type": "securestring",
      "minLength": 8,
      "maxLength": 128
    },
    "rep.authentication.apikey": {
      "type": "securestring",
      "minLength": 32
    }
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "name": "[variables('cmHostingPlanNameTidy')]",
      "apiVersion": "[variables('webApiVersion')]",
      "sku": {
        "name": "[parameters('cmHostingplanSkuname')]",
        "capacity": "[parameters('cmHostingplanSkucapacity')]"
      },
      "properties": {
        "name": "[variables('cmHostingPlanNameTidy')]"
      },
      "location": "[parameters('location')]",
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "name": "[variables('cdHostingPlanNameTidy')]",
      "apiVersion": "[variables('webApiVersion')]",
      "sku": {
        "name": "[parameters('cdHostingplanSkuname')]",
        "capacity": "[parameters('cdHostingplanSkucapacity')]"
      },
      "properties": {
        "name": "[variables('cdHostingPlanNameTidy')]"
      },
      "location": "[parameters('location')]",
      "dependsOn": [ "[resourceId('Microsoft.Web/serverfarms', variables('cmHostingPlanNameTidy'))]" ],
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "name": "[variables('prcHostingPlanNameTidy')]",
      "apiVersion": "[variables('webApiVersion')]",
      "sku": {
        "name": "[parameters('prcHostingplanSkuname')]",
        "capacity": "[parameters('prcHostingplanSkucapacity')]"
      },
      "properties": {
        "name": "[variables('prcHostingPlanNameTidy')]"
      },
      "location": "[parameters('location')]",
      "dependsOn": [ "[resourceId('Microsoft.Web/serverfarms', variables('cdHostingPlanNameTidy'))]" ],
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "name": "[variables('repHostingPlanNameTidy')]",
      "apiVersion": "[variables('webApiVersion')]",
      "sku": {
        "name": "[parameters('repHostingplanSkuname')]",
        "capacity": "[parameters('repHostingplanSkucapacity')]"
      },
      "properties": {
        "name": "[variables('repHostingPlanNameTidy')]"
      },
      "location": "[parameters('location')]",
      "dependsOn": [ "[resourceId('Microsoft.Web/serverfarms', variables('prcHostingPlanNameTidy'))]" ],
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "name": "[variables('cmWebAppNameTidy')]",
      "apiVersion": "[variables('webApiVersion')]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('cmHostingPlanNameTidy'))]",
        "siteConfig": {
          "use32BitWorkerProcess": false,
          "alwaysOn": true,
          "phpVersion": "",
          "defaultDocuments": [
            "index.html"
          ]
        }
      },
      "location": "[parameters('location')]",
      "dependsOn": [ "[resourceId('Microsoft.Web/serverfarms', variables('cmHostingPlanNameTidy'))]" ],
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]"
      },
      "resources": [
        {
          "name": "MSDeploy",
          "type": "extensions",
          "location": "[parameters('location')]",
          "apiVersion": "[variables('webApiVersion')]",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('cmWebAppNameTidy'))]",
            "[concat('Microsoft.Web/sites/', variables('repWebAppNameTidy'))]",
            "[resourceId('Microsoft.Search/searchServices', variables('searchServiceNameTidy'))]",
            "[resourceId('Microsoft.Insights/Components', variables('appInsightsNameTidy'))]",
            "[concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'), '/databases/', variables('coreDbNameTidy'))]",
            "[concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'), '/databases/', variables('masterDbNameTidy'))]",
            "[concat('Microsoft.Sql/servers/', variables('webDbServerNameTidy'), '/databases/', variables('webDbNameTidy'))]",
            "[concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'), '/databases/', variables('repDbNameTidy'))]" 
          ],
          "properties": {
            "packageUri": "[parameters('cmMsdeployPackageurl')]",
            "dbType": "SQL",
            "connectionString": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=master;User Id=', parameters('sqlserverLogin'), '@', variables('dbServerNameTidy'), ';Password=', parameters('sqlserverPassword'), ';')]",
            "setParameters": {
              "Application Path": "[variables('cmWebAppNameTidy')]",
              "Sitecore Admin New Password": "[parameters('sitecoreAdminPassword')]",
              "Core DB User Name": "[parameters('cmCoreSqldatabaseUsername')]",
              "Core DB Password": "[parameters('cmCoreSqldatabasePassword')]",
              "Core Admin Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('coreDbNameTidy'),';User Id=', parameters('sqlserverLogin'), ';Password=', parameters('sqlserverPassword'), ';')]",
              "Core Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('coreDbNameTidy'),';User Id=', parameters('cmCoreSqldatabaseUsername'), ';Password=', parameters('cmCoreSqldatabasePassword'), ';')]",
              "Master DB User Name": "[parameters('cmMasterSqldatabaseUsername')]",
              "Master DB Password": "[parameters('cmMasterSqldatabasePassword')]",
              "Master Admin Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('masterDbNameTidy'),';User Id=', parameters('sqlserverLogin'), ';Password=', parameters('sqlserverPassword'), ';')]",
              "Master Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('masterDbNameTidy'),';User Id=', parameters('cmMasterSqldatabaseUsername'), ';Password=', parameters('cmMasterSqldatabasePassword'), ';')]",
              "Web DB User Name": "[parameters('cmWebSqldatabaseUsername')]",
              "Web DB Password": "[parameters('cmWebSqldatabasePassword')]",
              "Web Admin Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('webDbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('webDbNameTidy'),';User Id=', parameters('webSqlserverLogin'), ';Password=', parameters('webSqlserverPassword'), ';')]",
              "Web Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('webDbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('webDbNameTidy'),';User Id=', parameters('cmWebSqldatabaseUsername'), ';Password=', parameters('cmWebSqldatabasePassword'), ';')]",
              "Reporting Admin Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('repDbNameTidy'),';User Id=', parameters('sqlserverLogin'), ';Password=', parameters('sqlserverPassword'), ';')]",
              "Cloud Search Connection String": "[concat('serviceUrl=https://', variables('searchServiceNameTidy'), '.search.windows.net;apiVersion=', variables('searchApiVersion'), ';apiKey=', listAdminKeys(resourceId('Microsoft.Search/searchServices', variables('searchServiceNameTidy')), variables('searchApiVersion')).primaryKey)]",
              "Analytics Connection String": "[variables('analyticsMongoDbConnStrTidy')]",
              "Tracking Live Connection String": "[variables('trackingLiveMongoDbConnStrTidy')]",
              "Tracking Contact Connection String": "[variables('trackingContactMongoDbConnStrTidy')]",
              "Reporting Service Url": "[concat('https://', reference(resourceId('Microsoft.Web/sites', variables('repWebAppNameTidy'))).hostNames[0])]",
              "Reporting Service Api Key": "[parameters('rep.authentication.apikey')]",
              "Application Insights Instrumentation Key": "[reference(resourceId('Microsoft.Insights/Components', variables('appInsightsNameTidy'))).InstrumentationKey]",
              "Application Insights Role": "CM",
              "KeepAlive Url": "[concat('https://', reference(resourceId('Microsoft.Web/sites', variables('cmWebAppNameTidy'))).hostNames[0], '/sitecore/service/keepalive.aspx')]",
              "License Xml": "[variables('licenseXml')]",
              "IP Security Client IP": "[parameters('securityClientIp')]",
              "IP Security Client IP Mask": "[parameters('securityClientIpMask')]"
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "name": "[variables('cdWebAppNameTidy')]",
      "apiVersion": "[variables('webApiVersion')]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('cdHostingPlanNameTidy'))]",
        "siteConfig": {
          "use32BitWorkerProcess": false,
          "alwaysOn": true,
          "phpVersion": "",
          "defaultDocuments": [
            "index.html"
          ]
        }
      },
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('cdHostingPlanNameTidy'))]"
      ],
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]"
      },
      "resources": [
        {
          "name": "MSDeploy",
          "type": "extensions",
          "location": "[parameters('location')]",
          "apiVersion": "[variables('webApiVersion')]",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('cdWebAppNameTidy'))]",
            "[concat('Microsoft.Web/sites/', variables('cmWebAppNameTidy'), '/Extensions/MSDeploy')]",
            "[resourceId('Microsoft.Cache/Redis', variables('redisCacheNameTidy'))]",
            "[resourceId('Microsoft.Search/searchServices', variables('searchServiceNameTidy'))]",
            "[resourceId('Microsoft.Insights/Components', variables('appInsightsNameTidy'))]",
            "[concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'), '/databases/', variables('coreDbNameTidy'))]",
            "[concat('Microsoft.Sql/servers/', variables('webDbServerNameTidy'), '/databases/', variables('webDbNameTidy'))]"
          ],
          "properties": {
            "packageUri": "[parameters('cdMsdeployPackageurl')]",
            "dbType": "SQL",
            "connectionString": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=master;User Id=', parameters('sqlserverLogin'), '@', variables('dbServerNameTidy'), ';Password=', parameters('sqlserverPassword'), ';')]",
            "setParameters": {
              "Application Path": "[variables('cdWebAppNameTidy')]",
              "Sitecore Admin New Password": "[parameters('sitecoreAdminPassword')]",
              "Core DB User Name": "[parameters('cdCoreSqldatabaseUsername')]",
              "Core DB Password": "[parameters('cdCoreSqldatabasePassword')]",
              "Core Admin Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('coreDbNameTidy'),';User Id=', parameters('sqlserverLogin'), ';Password=', parameters('sqlserverPassword'), ';')]",
              "Core Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('coreDbNameTidy'),';User Id=', parameters('cdCoreSqldatabaseUsername'), ';Password=', parameters('cdCoreSqldatabasePassword'), ';')]",
              "Web DB User Name": "[parameters('cdWebSqldatabaseUsername')]",
              "Web DB Password": "[parameters('cdWebSqldatabasePassword')]",
              "Web Admin Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('webDbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('webDbNameTidy'),';User Id=', parameters('webSqlserverLogin'), ';Password=', parameters('webSqlserverPassword'), ';')]",
              "Web Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('webDbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('webDbNameTidy'),';User Id=', parameters('cdWebSqldatabaseUsername'), ';Password=', parameters('cdWebSqldatabasePassword'), ';')]",
              "Cloud Search Connection String": "[concat('serviceUrl=https://', variables('searchServiceNameTidy'), '.search.windows.net;apiVersion=', variables('searchApiVersion'), ';apiKey=', listAdminKeys(resourceId('Microsoft.Search/searchServices', variables('searchServiceNameTidy')), variables('searchApiVersion')).primaryKey)]",
              "Analytics Connection String": "[variables('analyticsMongoDbConnStrTidy')]",
              "Tracking Live Connection String": "[variables('trackingLiveMongoDbConnStrTidy')]",
              "Tracking Contact Connection String": "[variables('trackingContactMongoDbConnStrTidy')]",
              "Application Insights Instrumentation Key": "[reference(resourceId('Microsoft.Insights/Components', variables('appInsightsNameTidy'))).InstrumentationKey]",
              "Application Insights Role": "CD",
              "KeepAlive Url": "[concat('https://', reference(resourceId('Microsoft.Web/sites', variables('cdWebAppNameTidy'))).hostNames[0], '/sitecore/service/keepalive.aspx')]",
              "Redis Connection String": "[concat(reference(variables('redisCacheNameTidy')).hostName, ':', reference(variables('redisCacheNameTidy')).sslPort, ',password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('redisCacheNameTidy')), variables('redisApiVersion')).primaryKey, ',ssl=True,abortConnect=False')]",
              "License Xml": "[variables('licenseXml')]"
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "name": "[variables('prcWebAppNameTidy')]",
      "apiVersion": "[variables('webApiVersion')]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('prcHostingPlanNameTidy'))]",
        "siteConfig": {
          "use32BitWorkerProcess": false,
          "alwaysOn": true,
          "phpVersion": "",
          "defaultDocuments": [
            "index.html"
          ]
        }
      },
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('prcHostingPlanNameTidy'))]",
      ],
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]"
      },
      "resources": [
        {
          "name": "MSDeploy",
          "type": "extensions",
          "location": "[parameters('location')]",
          "apiVersion": "[variables('webApiVersion')]",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('prcWebAppNameTidy'))]",
            "[concat('Microsoft.Web/sites/', variables('cmWebAppNameTidy'), '/Extensions/MSDeploy')]",
            "[resourceId('Microsoft.Search/searchServices', variables('searchServiceNameTidy'))]",
            "[resourceId('Microsoft.Insights/Components', variables('appInsightsNameTidy'))]",
            "[concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'), '/databases/', variables('coreDbNameTidy'))]",
            "[concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'), '/databases/', variables('masterDbNameTidy'))]",
            "[concat('Microsoft.Sql/servers/', variables('webDbServerNameTidy'), '/databases/', variables('webDbNameTidy'))]",
            "[concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'), '/databases/', variables('repDbNameTidy'))]"
          ],
          "properties": {
            "packageUri": "[parameters('prcMsdeployPackageurl')]",
            "dbType": "SQL",
            "connectionString": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=master;User Id=', parameters('sqlserverLogin'), '@', variables('dbServerNameTidy'), ';Password=', parameters('sqlserverPassword'), ';')]",
            "setParameters": {
              "Application Path": "[variables('prcWebAppNameTidy')]",
              "Sitecore Admin New Password": "[parameters('sitecoreAdminPassword')]",
              "Core DB User Name": "[parameters('prcCoreSqldatabaseUsername')]",
              "Core DB Password": "[parameters('prcCoreSqldatabasePassword')]",
              "Core Admin Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('coreDbNameTidy'),';User Id=', parameters('sqlserverLogin'), ';Password=', parameters('sqlserverPassword'), ';')]",
              "Core Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('coreDbNameTidy'),';User Id=', parameters('prcCoreSqldatabaseUsername'), ';Password=', parameters('prcCoreSqldatabasePassword'), ';')]",
              "Master DB User Name": "[parameters('prcMasterSqldatabaseUsername')]",
              "Master DB Password": "[parameters('prcMasterSqldatabasePassword')]",
              "Master Admin Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('masterDbNameTidy'),';User Id=', parameters('sqlserverLogin'), ';Password=', parameters('sqlserverPassword'), ';')]",
              "Master Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('masterDbNameTidy'),';User Id=', parameters('prcMasterSqldatabaseUsername'), ';Password=', parameters('prcMasterSqldatabasePassword'), ';')]",
              "Web DB User Name": "[parameters('prcWebSqldatabaseUsername')]",
              "Web DB Password": "[parameters('prcWebSqldatabasePassword')]",
              "Web Admin Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('webDbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('webDbNameTidy'),';User Id=', parameters('webSqlserverLogin'), ';Password=', parameters('webSqlserverPassword'), ';')]",
              "Web Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('webDbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('webDbNameTidy'),';User Id=', parameters('prcWebSqldatabaseUsername'), ';Password=', parameters('prcWebSqldatabasePassword'), ';')]",
              "Reporting DB User Name": "[parameters('prcReportingSqldatabaseUsername')]",
              "Reporting DB Password": "[parameters('prcReportingSqldatabasePassword')]",
              "Reporting Admin Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('repDbNameTidy'),';User Id=', parameters('sqlserverLogin'), ';Password=', parameters('sqlserverPassword'), ';')]",
              "Reporting Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('repDbNameTidy'),';User Id=', parameters('prcReportingSqldatabaseUsername'), ';Password=', parameters('prcReportingSqldatabasePassword'), ';')]",
              "Analytics Connection String": "[variables('analyticsMongoDbConnStrTidy')]",
              "Cloud Search Connection String": "[concat('serviceUrl=https://', variables('searchServiceNameTidy'), '.search.windows.net;apiVersion=', variables('searchApiVersion'), ';apiKey=', listAdminKeys(resourceId('Microsoft.Search/searchServices', variables('searchServiceNameTidy')), variables('searchApiVersion')).primaryKey)]",
              "Tracking Live Connection String": "[variables('trackingLiveMongoDbConnStrTidy')]",
              "Tracking History Connection String": "[variables('trackingHistoryMongoDbConnStrTidy')]",
              "Tracking Contact Connection String": "[variables('trackingContactMongoDbConnStrTidy')]",
              "Application Insights Instrumentation Key": "[reference(resourceId('Microsoft.Insights/Components', variables('appInsightsNameTidy'))).InstrumentationKey]",
              "Application Insights Role": "Processing",
              "KeepAlive Url": "[concat('https://', reference(resourceId('Microsoft.Web/sites', variables('prcWebAppNameTidy'))).hostNames[0], '/sitecore/service/keepalive.aspx')]",
              "License Xml": "[variables('licenseXml')]",
              "IP Security Client IP": "[parameters('securityClientIp')]",
              "IP Security Client IP Mask": "[parameters('securityClientIpMask')]"
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "name": "[variables('repWebAppNameTidy')]",
      "apiVersion": "[variables('webApiVersion')]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('repHostingPlanNameTidy'))]",
        "siteConfig": {
          "use32BitWorkerProcess": false,
          "alwaysOn": true,
          "phpVersion": "",
          "defaultDocuments": [
            "index.html"
          ]
        }
      },
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('repHostingPlanNameTidy'))]",
      ],
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]"
      },
      "resources": [
        {
          "name": "MSDeploy",
          "type": "extensions",
          "location": "[parameters('location')]",
          "apiVersion": "[variables('webApiVersion')]",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('repWebAppNameTidy'))]",
            "[concat('Microsoft.Web/sites/', variables('cmWebAppNameTidy'), '/Extensions/MSDeploy')]",
            "[resourceId('Microsoft.Search/searchServices', variables('searchServiceNameTidy'))]",
            "[resourceId('Microsoft.Insights/Components', variables('appInsightsNameTidy'))]",
            "[concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'), '/databases/', variables('coreDbNameTidy'))]",
            "[concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'), '/databases/', variables('masterDbNameTidy'))]",
            "[concat('Microsoft.Sql/servers/', variables('webDbServerNameTidy'), '/databases/', variables('webDbNameTidy'))]",
            "[concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'), '/databases/', variables('repDbNameTidy'))]"
          ],
          "properties": {
            "packageUri": "[parameters('repMsdeployPackageurl')]",
            "dbType": "SQL",
            "connectionString": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=master;User Id=', parameters('sqlserverLogin'), '@', variables('dbServerNameTidy'), ';Password=', parameters('sqlserverPassword'), ';')]",
            "setParameters": {
              "Application Path": "[variables('repWebAppNameTidy')]",
              "Sitecore Admin New Password": "[parameters('sitecoreAdminPassword')]",
              "Core DB User Name": "[parameters('repCoreSqldatabaseUsername')]",
              "Core DB Password": "[parameters('repCoreSqldatabasePassword')]",
              "Core Admin Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('coreDbNameTidy'),';User Id=', parameters('sqlserverLogin'), ';Password=', parameters('sqlserverPassword'), ';')]",
              "Core Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('coreDbNameTidy'),';User Id=', parameters('repCoreSqldatabaseUsername'), ';Password=', parameters('repCoreSqldatabasePassword'), ';')]",
              "Master DB User Name": "[parameters('repMasterSqldatabaseUsername')]",
              "Master DB Password": "[parameters('repMasterSqldatabasePassword')]",
              "Master Admin Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('masterDbNameTidy'),';User Id=', parameters('sqlserverLogin'), ';Password=', parameters('sqlserverPassword'), ';')]",
              "Master Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('masterDbNameTidy'),';User Id=', parameters('repMasterSqldatabaseUsername'), ';Password=', parameters('repMasterSqldatabasePassword'), ';')]",
              "Web DB User Name": "[parameters('repWebSqldatabaseUsername')]",
              "Web DB Password": "[parameters('repWebSqldatabasePassword')]",
              "Web Admin Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('webDbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('webDbNameTidy'),';User Id=', parameters('webSqlserverLogin'), ';Password=', parameters('webSqlserverPassword'), ';')]",
              "Web Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('webDbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('webDbNameTidy'),';User Id=', parameters('repWebSqldatabaseUsername'), ';Password=', parameters('repWebSqldatabasePassword'), ';')]",
              "Reporting DB User Name": "[parameters('repReportingSqldatabaseUsername')]",
              "Reporting DB Password": "[parameters('repReportingSqldatabasePassword')]",
              "Reporting Admin Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('repDbNameTidy'),';User Id=', parameters('sqlserverLogin'), ';Password=', parameters('sqlserverPassword'), ';')]",
              "Reporting Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('repDbNameTidy'),';User Id=', parameters('repReportingSqldatabaseUsername'), ';Password=', parameters('repReportingSqldatabasePassword'), ';')]",
              "Reporting Service Api Key": "[parameters('rep.authentication.apikey')]",
              "Cloud Search Connection String": "[concat('serviceUrl=https://', variables('searchServiceNameTidy'), '.search.windows.net;apiVersion=', variables('searchApiVersion'), ';apiKey=', listAdminKeys(resourceId('Microsoft.Search/searchServices', variables('searchServiceNameTidy')), variables('searchApiVersion')).primaryKey)]",
              "Analytics Connection String": "[variables('analyticsMongoDbConnStrTidy')]",
              "Tracking Live Connection String": "[variables('trackingLiveMongoDbConnStrTidy')]",
              "Tracking History Connection String": "[variables('trackingHistoryMongoDbConnStrTidy')]",
              "Application Insights Instrumentation Key": "[reference(resourceId('Microsoft.Insights/Components', variables('appInsightsNameTidy'))).InstrumentationKey]",
              "Application Insights Role": "Reporting",
              "KeepAlive Url": "[concat('https://', reference(resourceId('Microsoft.Web/sites', variables('repWebAppNameTidy'))).hostNames[0], '/sitecore/service/keepalive.aspx')]",
              "License Xml": "[variables('licenseXml')]"
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "[variables('dbApiVersion')]",
      "properties": {
        "administratorLogin": "[parameters('sqlserverLogin')]",
        "administratorLoginPassword": "[parameters('sqlserverPassword')]",
        "version": "[parameters('sqlserverVersion')]"
      },
      "name": "[variables('dbServerNameTidy')]",
      "location": "[parameters('location')]",
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]"
      },
      "resources": [
        {
          "type": "firewallrules",
          "apiVersion": "[variables('dbApiVersion')]",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          },
          "name": "AllowAllWindowsAzureIps",
          "dependsOn": [ "[resourceId('Microsoft.Sql/servers', variables('dbServerNameTidy'))]" ]
        },
        {
          "type": "databases",
          "apiVersion": "[variables('dbApiVersion')]",
          "properties": {
            "edition": "[parameters('sqldatabaseEdition')]",
            "collation": "[parameters('sqldatabaseCollation')]",
            "maxSizeBytes": "[parameters('sqldatabaseMaxsize')]",
            "requestedServiceObjectiveName": "[parameters('sqldatabaseServiceobjectivelevel')]"
          },
          "name": "[variables('coreDbNameTidy')]",
          "location": "[parameters('location')]",
          "dependsOn": [ "[resourceId('Microsoft.Sql/servers', variables('dbServerNameTidy'))]" ],
          "tags": {
            "provider": "[parameters('sitecoreTags').provider]"
          }
        },
        {
          "type": "databases",
          "apiVersion": "[variables('dbApiVersion')]",
          "properties": {
            "edition": "[parameters('sqldatabaseEdition')]",
            "collation": "[parameters('sqldatabaseCollation')]",
            "maxSizeBytes": "[parameters('sqldatabaseMaxsize')]",
            "requestedServiceObjectiveName": "[parameters('sqldatabaseServiceobjectivelevel')]"
          },
          "name": "[variables('masterDbNameTidy')]",
          "location": "[parameters('location')]",
          "dependsOn": [ "[resourceId('Microsoft.Sql/servers', variables('dbServerNameTidy'))]" ],
          "tags": {
            "provider": "[parameters('sitecoreTags').provider]"
          }
        },
        {
          "type": "databases",
          "apiVersion": "[variables('dbApiVersion')]",
          "properties": {
            "edition": "[parameters('sqldatabaseEdition')]",
            "collation": "[parameters('sqldatabaseCollation')]",
            "maxSizeBytes": "[parameters('sqldatabaseMaxsize')]",
            "requestedServiceObjectiveName": "[parameters('sqldatabaseServiceobjectivelevel')]"
          },
          "name": "[variables('repDbNameTidy')]",
          "location": "[parameters('location')]",
          "dependsOn": [ "[resourceId('Microsoft.Sql/servers', variables('dbServerNameTidy'))]" ],
          "tags": {
            "provider": "[parameters('sitecoreTags').provider]"
          }
        }
      ]
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "[variables('dbApiVersion')]",
      "properties": {
        "administratorLogin": "[parameters('webSqlserverLogin')]",
        "administratorLoginPassword": "[parameters('webSqlserverPassword')]",
        "version": "[parameters('sqlserverVersion')]"
      },
      "name": "[variables('webDbServerNameTidy')]",
      "location": "[parameters('location')]",
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]"
      },
      "resources": [
        {
          "type": "firewallrules",
          "apiVersion": "[variables('dbApiVersion')]",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          },
          "name": "AllowAllWindowsAzureIps",
          "dependsOn": [ "[resourceId('Microsoft.Sql/servers', variables('webDbServerNameTidy'))]" ]
        },
        {
          "type": "databases",
          "apiVersion": "[variables('dbApiVersion')]",
          "properties": {
            "edition": "[parameters('sqldatabaseEdition')]",
            "collation": "[parameters('sqldatabaseCollation')]",
            "maxSizeBytes": "[parameters('sqldatabaseMaxsize')]",
            "requestedServiceObjectiveName": "[parameters('sqldatabaseServiceobjectivelevel')]"
          },
          "name": "[variables('webDbNameTidy')]",
          "location": "[parameters('location')]",
          "dependsOn": [ "[resourceId('Microsoft.Sql/servers', variables('webDbServerNameTidy'))]" ],
          "tags": {
            "provider": "[parameters('sitecoreTags').provider]"
          }
        }
      ]
    },
    {
      "type": "Microsoft.Search/searchServices",
      "apiVersion": "[variables('searchApiVersion')]",
      "name": "[variables('searchServiceNameTidy')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "[toLower(parameters('searchserviceSkuname'))]"
        },
        "replicaCount": "[parameters('searchserviceReplicacount')]",
        "partitionCount": "[parameters('searchservicePartitioncount')]"
      },
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]"
      }
    },
    {
      "type": "Microsoft.Cache/Redis",
      "name": "[variables('redisCacheNameTidy')]",
      "apiVersion": "[variables('redisApiVersion')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "[parameters('rediscacheSkuname')]",
          "family": "[parameters('rediscacheSkufamily')]",
          "capacity": "[parameters('rediscacheSkucapacity')]"
        },
        "enableNonSslPort": false
      },
      "dependsOn": [ "[resourceId('Microsoft.Web/sites', variables('cdWebAppNameTidy'))]" ],
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]"
      }
    },
    {
      "type": "Microsoft.Insights/Components",
      "name": "[variables('appInsightsNameTidy')]",
      "apiVersion": "[variables('appInsightsApiVersion')]",
      "location": "[parameters('applicationinsightsLocation')]",
      "properties": {
        "ApplicationId": "[variables('appInsightsNameTidy')]",
        "Application_Type": "web"
      },
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]"
      }
    }
  ]
}
