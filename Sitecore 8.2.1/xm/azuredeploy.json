{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0-r220+220.1862ac675e9e45e83a045f452b155c07b0a2a6d1",
  "variables": {
    "webApiVersion": "2015-08-01",
    "dbApiVersion": "2014-04-01-preview",
    "searchApiVersion": "2015-02-28",
    "redisApiVersion": "2016-04-01",
    "appInsightsApiVersion": "2014-08-01",
    "cmHostingPlanNameTidy": "[toLower(trim(parameters('cm.hostingplan.name')))]",
    "cdHostingPlanNameTidy": "[toLower(trim(parameters('cd.hostingplan.name')))]",
    "cmWebAppNameTidy": "[toLower(trim(parameters('cm.webapp.name')))]",
    "cdWebAppNameTidy": "[toLower(trim(parameters('cd.webapp.name')))]",
    "dbServerNameTidy": "[toLower(trim(parameters('sqlserverName')))]",
    "coreDbNameTidy": "[toLower(trim(parameters('coreSqldatabaseName')))]",
    "webDbNameTidy": "[toLower(trim(parameters('webSqldatabaseName')))]",
    "webDbServerNameTidy": "[toLower(trim(parameters('webSqlserverName')))]",
    "masterDbNameTidy": "[toLower(trim(parameters('masterSqldatabaseName')))]",
    "searchServiceNameTidy": "[toLower(trim(parameters('searchserviceName')))]",
    "redisCacheNameTidy": "[toLower(trim(parameters('rediscache.name')))]",
    "appInsightsNameTidy": "[toLower(trim(parameters('applicationinsightsName')))]",
    "licenseXml": "[parameters('licenseXml')]"
  },
  "parameters": {
    "deploymentId": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "cm.hostingplan.name": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-cm-hp')]"
    },
    "cd.hostingplan.name": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-cd-hp')]"
    },
    "cm.webapp.name": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-cm')]"
    },
    "cd.webapp.name": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-cd')]"
    },
    "cm.msdeploy.packageurl": {
      "type": "securestring"
    },
    "cd.msdeploy.packageurl": {
      "type": "securestring"
    },
    "sqlserverName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-sql')]"
    },
    "sqlserverLogin": {
      "type": "string",
      "minLength": 1
    },
    "sqlserverPassword": {
      "type": "securestring",
      "minLength": 8
    },
    "webSqlserverName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-web-sql')]"
    },
    "webSqlserverLogin": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[parameters('sqlserverLogin')]"
    },
    "webSqlserverPassword": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[parameters('sqlserverPassword')]"
    },
    "coreSqldatabaseName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-core-db')]"
    },
    "masterSqldatabaseName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-master-db')]"
    },
    "webSqldatabaseName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-web-db')]"
    },
    "cm.core.sqldatabase.username": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat('cm-core-', deployment().name, '-user')]"
    },
    "cm.core.sqldatabase.password": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('cm-core')), '@', uniqueString(parameters('sqlserverPassword')))]"
    },
    "cm.master.sqldatabase.username": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat('cm-master-', deployment().name, '-user')]"
    },
    "cm.master.sqldatabase.password": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('cm-master')), '@', uniqueString(parameters('sqlserverPassword')))]"
    },
    "cm.web.sqldatabase.username": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat('cm-web-', deployment().name, '-user')]"
    },
    "cm.web.sqldatabase.password": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('cm-web')), '@', uniqueString(parameters('sqlserverPassword')))]"
    },
    "cd.core.sqldatabase.username": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat('cd-core-', deployment().name, '-user')]"
    },
    "cd.core.sqldatabase.password": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('cd-core')), '@', uniqueString(parameters('sqlserverPassword')))]"
    },
    "cd.web.sqldatabase.username": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat('cd-web-', deployment().name, '-user')]"
    },
    "cd.web.sqldatabase.password": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('cd-web')), '@', uniqueString(parameters('sqlserverPassword')))]"
    },
    "searchserviceName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-as')]"
    },
    "rediscache.name": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-redis')]"
    },
    "applicationinsightsName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentId'), '-ai')]"
    },
    "applicationinsightsLocation": {
      "type": "string",
      "defaultValue": "East US",
      "allowedValues": [ "East US", "South Central US", "North Europe", "West Europe" ]
    },
    "cm.hostingplan.skuname": {
      "type": "string",
      "defaultValue": "S1"
    },
    "cm.hostingplan.skucapacity": {
      "type": "int",
      "defaultValue": 1
    },
    "cd.hostingplan.skuname": {
      "type": "string",
      "defaultValue": "S1"
    },
    "cd.hostingplan.skucapacity": {
      "type": "int",
      "defaultValue": 1
    },
    "searchserviceSkuname": {
      "type": "string",
      "defaultValue": "Standard"
    },
    "sqlserverVersion": {
      "type": "string",
      "defaultValue": "12.0"
    },
    "sqldatabaseCollation": {
      "type": "string",
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
    },
    "sqldatabaseEdition": {
      "type": "string",
      "defaultValue": "Standard"
    },
    "sqldatabaseMaxsize": {
      "type": "string",
      "defaultValue": "10737418240"
    },
    "sqldatabaseServiceobjectivelevel": {
      "type": "string",
      "defaultValue": "S1"
    },
    "searchservice.cdlicacount": {
      "type": "int",
      "defaultValue": 1
    },
    "searchservicePartitioncount": {
      "type": "int",
      "defaultValue": 1
    },
    "rediscache.skuname": {
      "type": "string",
      "defaultValue": "Basic"
    },
    "rediscache.skufamily": {
      "type": "string",
      "defaultValue": "C"
    },
    "rediscache.skucapacity": {
      "type": "string",
      "defaultValue": "0"
    },
    "sitecoreTags": {
      "type": "object",
      "defaultValue": {
        "provider": "b51535c2-ab3e-4a68-95f8-e2e3c9a19299"
      }
    },
    "licenseXml": {
      "type": "securestring"
    },
    "security.clientIp": {
      "type": "string",
      "defaultValue": "0.0.0.0"
    },
    "security.clientIpMask": {
      "type": "string",
      "defaultValue": "0.0.0.0"
    },
    "sitecoreAdminPassword": {
      "type": "securestring",
      "minLength": 8,
      "maxLength": 128
    }
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "name": "[variables('cmHostingPlanNameTidy')]",
      "apiVersion": "[variables('webApiVersion')]",
      "sku": {
        "name": "[parameters('cm.hostingplan.skuname')]",
        "capacity": "[parameters('cm.hostingplan.skucapacity')]"
      },
      "properties": {
        "name": "[variables('cmHostingPlanNameTidy')]"
      },
      "location": "[parameters('location')]",
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "name": "[variables('cdHostingPlanNameTidy')]",
      "apiVersion": "[variables('webApiVersion')]",
      "sku": {
        "name": "[parameters('cd.hostingplan.skuname')]",
        "capacity": "[parameters('cd.hostingplan.skucapacity')]"
      },
      "properties": {
        "name": "[variables('cdHostingPlanNameTidy')]"
      },
      "location": "[parameters('location')]",
      "dependsOn": [ "[resourceId('Microsoft.Web/serverfarms', variables('cmHostingPlanNameTidy'))]" ],
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "name": "[variables('cmWebAppNameTidy')]",
      "apiVersion": "[variables('webApiVersion')]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('cmHostingPlanNameTidy'))]",
        "siteConfig": {
          "use32BitWorkerProcess": false,
          "alwaysOn": true,
          "phpVersion": "",
          "defaultDocuments": [
            "index.html"
          ]
        }
      },
      "location": "[parameters('location')]",
      "dependsOn": [ "[resourceId('Microsoft.Web/serverfarms', variables('cmHostingPlanNameTidy'))]" ],
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]"
      },
      "resources": [
        {
          "name": "MSDeploy",
          "type": "extensions",
          "location": "[parameters('location')]",
          "apiVersion": "[variables('webApiVersion')]",
          "dependsOn": [ "[concat('Microsoft.Web/sites/', variables('cmWebAppNameTidy'))]", "[resourceId('Microsoft.Search/searchServices', variables('searchServiceNameTidy'))]", "[resourceId('Microsoft.Insights/Components', variables('appInsightsNameTidy'))]", "[concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'), '/databases/', variables('coreDbNameTidy'))]", "[concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'), '/databases/', variables('masterDbNameTidy'))]", "[concat('Microsoft.Sql/servers/', variables('webDbServerNameTidy'), '/databases/', variables('webDbNameTidy'))]" ],
          "properties": {
            "packageUri": "[parameters('cm.msdeploy.packageurl')]",
            "dbType": "SQL",
            "connectionString": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=master;User Id=', parameters('sqlserverLogin'), '@', variables('dbServerNameTidy'), ';Password=', parameters('sqlserverPassword'), ';')]",
            "setParameters": {
              "Application Path": "[variables('cmWebAppNameTidy')]",
              "Sitecore Admin New Password": "[parameters('sitecoreAdminPassword')]",
              "Core DB User Name": "[parameters('cm.core.sqldatabase.username')]",
              "Core DB Password": "[parameters('cm.core.sqldatabase.password')]",
              "Core Admin Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('coreDbNameTidy'),';User Id=', parameters('sqlserverLogin'), ';Password=', parameters('sqlserverPassword'), ';')]",
              "Core Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('coreDbNameTidy'),';User Id=', parameters('cm.core.sqldatabase.username'), ';Password=', parameters('cm.core.sqldatabase.password'), ';')]",
              "Master DB User Name": "[parameters('cm.master.sqldatabase.username')]",
              "Master DB Password": "[parameters('cm.master.sqldatabase.password')]",
              "Master Admin Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('masterDbNameTidy'),';User Id=', parameters('sqlserverLogin'), ';Password=', parameters('sqlserverPassword'), ';')]",
              "Master Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('masterDbNameTidy'),';User Id=', parameters('cm.master.sqldatabase.username'), ';Password=', parameters('cm.master.sqldatabase.password'), ';')]",
              "Web DB User Name": "[parameters('cm.web.sqldatabase.username')]",
              "Web DB Password": "[parameters('cm.web.sqldatabase.password')]",
              "Web Admin Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('webDbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('webDbNameTidy'),';User Id=', parameters('webSqlserverLogin'), ';Password=', parameters('webSqlserverPassword'), ';')]",
              "Web Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('webDbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('webDbNameTidy'),';User Id=', parameters('cm.web.sqldatabase.username'), ';Password=', parameters('cm.web.sqldatabase.password'), ';')]",
              "Cloud Search Connection String": "[concat('serviceUrl=https://', variables('searchServiceNameTidy'), '.search.windows.net;apiVersion=', variables('searchApiVersion'), ';apiKey=', listAdminKeys(resourceId('Microsoft.Search/searchServices', variables('searchServiceNameTidy')), variables('searchApiVersion')).primaryKey)]",
              "Application Insights Instrumentation Key": "[reference(resourceId('Microsoft.Insights/Components', variables('appInsightsNameTidy'))).InstrumentationKey]",
              "Application Insights Role": "CM",
              "KeepAlive Url": "[concat('https://', reference(resourceId('Microsoft.Web/sites', variables('cmWebAppNameTidy'))).hostNames[0], '/sitecore/service/keepalive.aspx')]",
              "License Xml": "[variables('licenseXml')]",
              "IP Security Client IP": "[parameters('security.clientIp')]",
              "IP Security Client IP Mask": "[parameters('security.clientIpMask')]"
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "name": "[variables('cdWebAppNameTidy')]",
      "apiVersion": "[variables('webApiVersion')]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('cdHostingPlanNameTidy'))]",
        "siteConfig": {
          "use32BitWorkerProcess": false,
          "alwaysOn": true,
          "phpVersion": "",
          "defaultDocuments": [
            "index.html"
          ]
        }
      },
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('cdHostingPlanNameTidy'))]"
      ],
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]"
      },
      "resources": [
        {
          "name": "MSDeploy",
          "type": "extensions",
          "location": "[parameters('location')]",
          "apiVersion": "[variables('webApiVersion')]",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('cdWebAppNameTidy'))]",
            "[concat('Microsoft.Web/sites/', variables('cmWebAppNameTidy'), '/Extensions/MSDeploy')]",
            "[resourceId('Microsoft.Cache/Redis', variables('redisCacheNameTidy'))]",
            "[resourceId('Microsoft.Search/searchServices', variables('searchServiceNameTidy'))]",
            "[resourceId('Microsoft.Insights/Components', variables('appInsightsNameTidy'))]",
            "[concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'), '/databases/', variables('coreDbNameTidy'))]",
            "[concat('Microsoft.Sql/servers/', variables('webDbServerNameTidy'), '/databases/', variables('webDbNameTidy'))]"
          ],
          "properties": {
            "packageUri": "[parameters('cd.msdeploy.packageurl')]",
            "dbType": "SQL",
            "connectionString": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=master;User Id=', parameters('sqlserverLogin'), '@', variables('dbServerNameTidy'), ';Password=', parameters('sqlserverPassword'), ';')]",
            "setParameters": {
              "Application Path": "[variables('cdWebAppNameTidy')]",
              "Sitecore Admin New Password": "[parameters('sitecoreAdminPassword')]",
              "Core DB User Name": "[parameters('cd.core.sqldatabase.username')]",
              "Core DB Password": "[parameters('cd.core.sqldatabase.password')]",
              "Core Admin Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('coreDbNameTidy'),';User Id=', parameters('sqlserverLogin'), ';Password=', parameters('sqlserverPassword'), ';')]",
              "Core Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('coreDbNameTidy'),';User Id=', parameters('cd.core.sqldatabase.username'), ';Password=', parameters('cd.core.sqldatabase.password'), ';')]",
              "Web DB User Name": "[parameters('cd.web.sqldatabase.username')]",
              "Web DB Password": "[parameters('cd.web.sqldatabase.password')]",
              "Web Admin Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('webDbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('webDbNameTidy'),';User Id=', parameters('webSqlserverLogin'), ';Password=', parameters('webSqlserverPassword'), ';')]",
              "Web Connection String": "[concat('Encrypt=True;TrustServerCertificate=False;Data Source=', reference(concat('Microsoft.Sql/servers/', variables('webDbServerNameTidy'))).fullyQualifiedDomainName, ',1433;Initial Catalog=',variables('webDbNameTidy'),';User Id=', parameters('cd.web.sqldatabase.username'), ';Password=', parameters('cd.web.sqldatabase.password'), ';')]",
              "Cloud Search Connection String": "[concat('serviceUrl=https://', variables('searchServiceNameTidy'), '.search.windows.net;apiVersion=', variables('searchApiVersion'), ';apiKey=', listAdminKeys(resourceId('Microsoft.Search/searchServices', variables('searchServiceNameTidy')), variables('searchApiVersion')).primaryKey)]",
              "Application Insights Instrumentation Key": "[reference(resourceId('Microsoft.Insights/Components', variables('appInsightsNameTidy'))).InstrumentationKey]",
              "Application Insights Role": "CD",
              "KeepAlive Url": "[concat('https://', reference(resourceId('Microsoft.Web/sites', variables('cdWebAppNameTidy'))).hostNames[0], '/sitecore/service/keepalive.aspx')]",
              "Redis Connection String": "[concat(reference(variables('redisCacheNameTidy')).hostName, ':', reference(variables('redisCacheNameTidy')).sslPort, ',password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('redisCacheNameTidy')), variables('redisApiVersion')).primaryKey, ',ssl=True,abortConnect=False')]",
              "License Xml": "[variables('licenseXml')]"
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "[variables('dbApiVersion')]",
      "properties": {
        "administratorLogin": "[parameters('sqlserverLogin')]",
        "administratorLoginPassword": "[parameters('sqlserverPassword')]",
        "version": "[parameters('sqlserverVersion')]"
      },
      "name": "[variables('dbServerNameTidy')]",
      "location": "[parameters('location')]",
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]"
      },
      "resources": [
        {
          "type": "firewallrules",
          "apiVersion": "[variables('dbApiVersion')]",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          },
          "name": "AllowAllWindowsAzureIps",
          "dependsOn": [ "[resourceId('Microsoft.Sql/servers', variables('dbServerNameTidy'))]" ]
        },
        {
          "type": "databases",
          "apiVersion": "[variables('dbApiVersion')]",
          "properties": {
            "edition": "[parameters('sqldatabaseEdition')]",
            "collation": "[parameters('sqldatabaseCollation')]",
            "maxSizeBytes": "[parameters('sqldatabaseMaxsize')]",
            "requestedServiceObjectiveName": "[parameters('sqldatabaseServiceobjectivelevel')]"
          },
          "name": "[variables('coreDbNameTidy')]",
          "location": "[parameters('location')]",
          "dependsOn": [ "[resourceId('Microsoft.Sql/servers', variables('dbServerNameTidy'))]" ],
          "tags": {
            "provider": "[parameters('sitecoreTags').provider]"
          }
        },
        {
          "type": "databases",
          "apiVersion": "[variables('dbApiVersion')]",
          "properties": {
            "edition": "[parameters('sqldatabaseEdition')]",
            "collation": "[parameters('sqldatabaseCollation')]",
            "maxSizeBytes": "[parameters('sqldatabaseMaxsize')]",
            "requestedServiceObjectiveName": "[parameters('sqldatabaseServiceobjectivelevel')]"
          },
          "name": "[variables('masterDbNameTidy')]",
          "location": "[parameters('location')]",
          "dependsOn": [ "[resourceId('Microsoft.Sql/servers', variables('dbServerNameTidy'))]" ],
          "tags": {
            "provider": "[parameters('sitecoreTags').provider]"
          }
        }
      ]
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "[variables('dbApiVersion')]",
      "properties": {
        "administratorLogin": "[parameters('webSqlserverLogin')]",
        "administratorLoginPassword": "[parameters('webSqlserverPassword')]",
        "version": "[parameters('sqlserverVersion')]"
      },
      "name": "[variables('webDbServerNameTidy')]",
      "location": "[parameters('location')]",
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]"
      },
      "resources": [
        {
          "type": "firewallrules",
          "apiVersion": "[variables('dbApiVersion')]",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          },
          "name": "AllowAllWindowsAzureIps",
          "dependsOn": [ "[resourceId('Microsoft.Sql/servers', variables('webDbServerNameTidy'))]" ]
        },
        {
          "type": "databases",
          "apiVersion": "[variables('dbApiVersion')]",
          "properties": {
            "edition": "[parameters('sqldatabaseEdition')]",
            "collation": "[parameters('sqldatabaseCollation')]",
            "maxSizeBytes": "[parameters('sqldatabaseMaxsize')]",
            "requestedServiceObjectiveName": "[parameters('sqldatabaseServiceobjectivelevel')]"
          },
          "name": "[variables('webDbNameTidy')]",
          "location": "[parameters('location')]",
          "dependsOn": [ "[resourceId('Microsoft.Sql/servers', variables('webDbServerNameTidy'))]" ],
          "tags": {
            "provider": "[parameters('sitecoreTags').provider]"
          }
        }
      ]
    },
    {
      "type": "Microsoft.Search/searchServices",
      "apiVersion": "[variables('searchApiVersion')]",
      "name": "[variables('searchServiceNameTidy')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "[toLower(parameters('searchserviceSkuname'))]"
        },
        "cdlicaCount": "[parameters('searchservice.cdlicacount')]",
        "partitionCount": "[parameters('searchservicePartitioncount')]"
      },
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]"
      }
    },
    {
      "type": "Microsoft.Cache/Redis",
      "name": "[variables('redisCacheNameTidy')]",
      "apiVersion": "[variables('redisApiVersion')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "[parameters('rediscache.skuname')]",
          "family": "[parameters('rediscache.skufamily')]",
          "capacity": "[parameters('rediscache.skucapacity')]"
        },
        "enableNonSslPort": false
      },
      "dependsOn": [ "[resourceId('Microsoft.Web/sites', variables('cdWebAppNameTidy'))]" ],
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]"
      }
    },
    {
      "type": "Microsoft.Insights/Components",
      "name": "[variables('appInsightsNameTidy')]",
      "apiVersion": "[variables('appInsightsApiVersion')]",
      "location": "[parameters('applicationinsightsLocation')]",
      "properties": {
        "ApplicationId": "[variables('appInsightsNameTidy')]",
        "Application_Type": "web"
      },
      "tags": {
        "provider": "[parameters('sitecoreTags').provider]"
      }
    }
  ]
}
